load("//devtools/python/blaze:pytype.bzl", "pytype_strict_library")

package(default_visibility = ["//third_party/py/scenic:scenic_friends"])

licenses(["notice"])

filegroup(
    name = "coco_annotation_data",
    srcs = glob(["data/**"]),
)

py_library(
    name = "dataset_lib",
    srcs = [
        "datasets.py",
    ],
    srcs_version = "PY3",
    deps = [
        ":cifar10_dataset",
        ":cityscapes_dataset",
        ":clevr_dataset",
        ":coco_dataset",
        ":fashion_mnist_dataset",
        ":imagenet_dataset",
        ":mnist_dataset",
        ":oxford_pets_dataset",
        ":svhn_dataset",
        "//third_party/py/scenic/google/dataset_lib:google_dataset_lib",
        "//third_party/py/scenic/projects:projects_datasets",
    ],
)

py_library(
    name = "cifar10_dataset",
    srcs = [
        "cifar10_dataset.py",
    ],
    srcs_version = "PY3",
    deps = [
        ":dataset_utils",
        "//third_party/py/absl/logging",
        "//third_party/py/tensorflow",
    ],
)

py_library(
    name = "cityscapes_dataset",
    srcs = [
        "cityscapes_dataset.py",
    ],
    srcs_version = "PY3",
    deps = [
        ":dataset_utils",
        "//third_party/py/absl/logging",
        "//third_party/py/numpy",
        "//third_party/py/tensorflow",
    ],
)

py_library(
    name = "clevr_dataset",
    srcs = [
        "clevr_dataset.py",
    ],
    srcs_version = "PY3",
    deps = [
        ":dataset_utils",
        "//third_party/py/absl/logging",
        "//third_party/py/flax",
        "//third_party/py/jax",
        "//third_party/py/numpy",
        "//third_party/py/tensorflow",
        "//third_party/py/tensorflow_datasets",
    ],
)

py_library(
    name = "listops_dataset",
    srcs = [
        "listops_dataset.py",
    ],
    srcs_version = "PY3",
    deps = [
        ":dataset_utils",
        "//third_party/py/absl/logging",
        "//third_party/py/flax",
        "//third_party/py/numpy",
        "//third_party/py/tensorflow",
        "//third_party/py/tensorflow_datasets",
        "//third_party/py/tensorflow_text",
    ],
)

py_library(
    name = "coco_dataset",
    srcs = [
        "coco_dataset.py",
    ],
    srcs_version = "PY3",
    deps = [
        ":dataset_utils",
        "//third_party/py/absl/logging",
        "//third_party/py/jax",
        "//third_party/py/tensorflow",
        "//third_party/py/tensorflow_datasets",
    ],
)

py_library(
    name = "fashion_mnist_dataset",
    srcs = [
        "fashion_mnist_dataset.py",
    ],
    srcs_version = "PY3",
    deps = [
        ":dataset_utils",
        "//third_party/py/absl/logging",
        "//third_party/py/tensorflow",
    ],
)

py_library(
    name = "imagenet_dataset",
    srcs = [
        "imagenet_dataset.py",
    ],
    srcs_version = "PY3",
    deps = [
        ":dataset_utils",
        "//third_party/py/absl/logging",
        "//third_party/py/flax",
        "//third_party/py/jax",
        "//third_party/py/tensorflow",
        "//third_party/py/tensorflow_datasets",
    ],
)

py_library(
    name = "mnist_dataset",
    srcs = [
        "mnist_dataset.py",
    ],
    srcs_version = "PY3",
    deps = [
        ":dataset_utils",
        "//third_party/py/absl/logging",
        "//third_party/py/tensorflow",
    ],
)

py_library(
    name = "oxford_pets_dataset",
    srcs = [
        "oxford_pets_dataset.py",
    ],
    srcs_version = "PY3",
    deps = [
        ":dataset_utils",
        "//third_party/py/absl/logging",
        "//third_party/py/tensorflow",
    ],
)

py_library(
    name = "svhn_dataset",
    srcs = [
        "svhn_dataset.py",
    ],
    srcs_version = "PY3",
    deps = [
        ":dataset_utils",
        "//third_party/py/absl/logging",
        "//third_party/py/tensorflow",
    ],
)

pytype_strict_library(
    name = "dataset_utils",
    srcs = [
        "dataset_utils.py",
    ],
    srcs_version = "PY3",
    deps = [
        "//third_party/py/absl/logging",
        "//third_party/py/flax/training",
        "//third_party/py/jax",
        "//third_party/py/numpy",
        "//third_party/py/tensorflow",
        "//third_party/py/tensorflow_datasets",
    ],
)

py_library(
    name = "coco_eval",
    srcs = ["coco_eval.py"],
    data = [
        ":coco_annotation_data",
    ],
    srcs_version = "PY3",
    deps = [
        "//third_party/py/PIL:pil",
        "//third_party/py/absl/logging",
        "//third_party/py/jax",
        "//third_party/py/numpy",
        "//third_party/py/pycocotools",
        "//third_party/py/pycocotools/panopticapi:evaluation_lib",
        "//third_party/py/pycocotools/panopticapi:utils",
        "//third_party/py/tensorflow",
    ],
)
